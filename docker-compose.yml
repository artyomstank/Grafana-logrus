version: "3.9"

services:
  # Kafka в режиме KRaft (без Zookeeper)
  kafka:  
    image: bitnami/kafka:3.6.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
    - KAFKA_ENABLE_KRAFT=yes
    - KAFKA_CFG_PROCESS_ROLES=broker,controller
    - KAFKA_CFG_NODE_ID=1                # <-- уникальный ID
    - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
    - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
    - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT  # <-- обязательно
    - ALLOW_PLAINTEXT_LISTENER=yes

    volumes:
      - kafka_data:/bitnami/kafka

  # Твой продьюсер
  producer:
    build: .
    container_name: producer
    depends_on:
      - kafka
    environment:
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=test-topic
      - KAFKA_GROUPID=test-group
    ports:
      - "8080:8080" # если у тебя есть HTTP API
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Loki для хранения логов
  loki:
    image: grafana/loki:2.9.0
    container_name: loki
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml

  # Promtail для сбора логов
  promtail:
    image: grafana/promtail:2.9.0
    container_name: promtail
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./promtail-config.yaml:/etc/promtail/promtail-config.yaml
    command: -config.file=/etc/promtail/promtail-config.yaml
    depends_on:
      - loki

  # Grafana для визуализации
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - loki

volumes:
  kafka_data:
